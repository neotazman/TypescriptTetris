# This is a tetris game that I'm building as my first typescript project

# trying to add the gamestate as a parameter for the gamepiece class, still need to adjust it
    a) put the gamestate parameter on each of the subclasses
    b) the rest of the subclass is the argument for the superclass

# findIndex takes an optional second argument of which index to start with. 
    a) make a function indices(previousIndex?) run the findIndex function within indices
    b) add the return 
    c) within the findIndex callback function, if it would return true, add the value to an array and run indices with the value of the previous return value to add to the value array  

# the event listener for the gamepiece controller isn't working, kittee is awake, so i need to stop the game
    b) move the inner code of control, make it a method on gamepiece and set event as a parameter -- IT WORKED
    c) i wasn't able to figure out why the piece wouldn't rotate, but it was because i needed to reset the blueprint AND the cells

# trying to figure out code for gamepieces that have stopped
    a) the board gets cleared before the gamepiece is drawn on. might need to create an array of the 2 positions to add to the board before it's built (or as it's built)
        1) check the cell position values so they won't be overwritten
        2) check every line for all 2s and delete them and add a new line to the front of the array. (? .unshift (? and increase the score

# any methods in the classes can't be called before it creates the object, but the gamepiece can refer to the GameBoard object because the first gamepiece isn't created until after the gameboard is created